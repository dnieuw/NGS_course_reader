# Assembly and annotation

## Nanopore sequence assembly

For the assembly of our quality controlled reads we are going to use [Flye](https://github.com/mikolmogorov/Flye) assembler meta. 

As written on their website:
"Flye is a de novo assembler for single-molecule sequencing reads, such as those produced by PacBio and Oxford Nanopore Technologies. It is designed for a wide range of datasets, from small bacterial projects to large mammalian-scale assemblies. The package represents a complete pipeline: it takes raw PacBio / ONT reads as input and outputs polished contigs. Flye also has a special mode for metagenome assembly."

We will use the "special metagenome mode to assemble our viral sequence data. 

``` bash
flye --nano-raw {input} --threads 18 --meta -o {output}
```

- `{input}` This is the QCed read file from the previous section.
- `{output}` This is the name of the folder where Flye will produce all its files and a "assembly.fasta" file containing the generate contigs.

## Mapping reads back to assembled contigs

To get an idea of how many reads have been used to generate the assembled contigs we can map the QCed reads back to the contigs. With Illumina sequencing data this method can be used to get an idea of how much of the specific organism was present in the sample, because it has a somewhat linear relationship. For Nanopore sequencing data this relationship between the number of reads and the amount of virus in the sample is not clear.

We use minimap2 again to map the reads to the contigs with the following command:

``` bash
minimap2 -aY -t {threads} -x map-ont {input.assembly} {input.reads} | samtools view -bF 4 - | samtools sort -@ {threads} - > {output}
```

- `{input.assembly}` This is the assembly.fasta generated by Flye.
- `{input.reads}` This is the QCed read file from the previous section.
- `{output}` This is the `.bam` file with mapped reads to all assembled contigs.

You can now open the `.bam` file using UGENE and look at the coverage of the assembled contigs.

## Nanopore sequence annotation

To keep the annotation quick and simple and enable everyone to do the annotation on their laptop we have prepared a small annotation database containing all complete human virus sequences from NCBI (without SARS-CoV-2). We have also created a BLAST database from these sequences to annotate our contig sequences.

The following command will use the local [blastn](https://blast.ncbi.nlm.nih.gov/Blast.cgi) software to find matches between our sequences and the custom database.

The `outfmt` parameter describes the tab-separated file format and the columns in that file. For a full description of all the output please refer to this [website](https://www.metagenomics.wiki/tools/blast/blastn-output-format-6).

``` bash
blastn -db {db} -query {input} -out {output} -outfmt '6 qseqid sseqid pident qlen slen length mismatch gapopen qstart qend sstart send evalue bitscore staxids' -num_threads {threads}
```

- `{db}` This is the location of the blastdb (ncbi_viral_complete_human.fasta) 
- `{output}` This is the name of the folder where Flye will produce all its files and a "assembly.fasta" file containing the generate contigs.
- `{input}` This is the QCed read file from the previous section.
- `{output}` This is the name of the folder where Flye will produce all its files and a "assembly.fasta" file containing the generate contigs.

::: {.callout-note}
We have now completed the initial processing and analysis of our metagenomic sequencing dataset. Please take your time to go over all the intermediate and result files and ask any questions! Then next step is automating the analysis using Snakemake.
:::
